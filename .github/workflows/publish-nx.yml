name: publish-nx-ontology-service.yml
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - CHANGELOG.md

jobs:
  main:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20.14
          registry-url: 'https://registry.npmjs.org/'
          scope: 'telicent-oss'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
      - run: yarn install --frozen-lockfile
      - run: npx nx run @telicent-oss/rdfservice:build
      # - run: cd ./packages/RdfService && ls -la ./dist && npm publish --access public --provenance
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
      #     NPM_CONFIG_PROVENANCE: true
      - run: npx nx run @telicent-oss/ontologyservice:build

      - run: |
          cd ./packages/RdfService
          local_version=$(node -p "require('./package.json').version")
          published_version=$(npm view $(node -p "require('./package.json').name") version 2>/dev/null || echo "0.0.0")

          if [ "$published_version" != "$local_version" ]; then
            npm publish --access public
          else
            echo "No changes in version. Skipping publish."
          fi

          cd -
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
      - run: |
          cd ./packages/OntologyService
          local_version=$(node -p "require('./package.json').version")
          published_version=$(npm view $(node -p "require('./package.json').name") version 2>/dev/null || echo "0.0.0")

          if [ "$published_version" != "$local_version" ]; then
            npm publish --access public
          else
            echo "No changes in version. Skipping publish."
          fi

          cd -
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
